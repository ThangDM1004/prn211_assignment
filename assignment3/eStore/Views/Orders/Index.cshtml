@model IEnumerable<BusinessObjects.Order>
@using Repositories;
@using Microsoft.AspNetCore.Http;
@{
	ViewData["Title"] = "Index";
	ICustomerRepository cus = new CustomerRepository();
	var value = Context.Request.HttpContext.Session.GetString("role");
		if (value == null)
	{
		Context.Response.Redirect("/Home/Login");
	};
}

<h1>Order</h1>

<table class="table">
	<thead>
		<tr>
			<th>
				@Html.DisplayNameFor(model => model.OrderDate)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.ShippedDate)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Total)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.OrderStatus)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Customer)
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.OrderDate)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.ShippedDate)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Total)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.OrderStatus)
				</td>
				<td>
					@Html.DisplayFor(modelItem => cus.getMemberByID((int)item.CustomerId).CustomerName)
				</td>
				<td>
					@if (value == "Admin")
					{
						<a asp-action="Edit" asp-route-id="@item.OrderId">Edit</a> <span>|</span>
						<a asp-action="Details" asp-route-id="@item.OrderId">Details</a>  <span>|</span>
						<a asp-controller="OrderDetails" asp-action="Index" asp-route-id="@item.OrderId">Order Details</a>

						<span>|</span>
						<a asp-action="Delete" asp-route-id="@item.OrderId">Delete</a>

					}
					else
					{
						<a asp-action="Details" asp-route-id="@item.OrderId">Details</a>

						<span>|</span>
						<a asp-controller="OrderDetails" asp-action="Index" asp-route-id="@item.OrderId">Order Details</a>

						
					}
				</td>
			</tr>
		}
	</tbody>
</table>
